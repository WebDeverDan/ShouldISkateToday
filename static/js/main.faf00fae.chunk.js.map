{"version":3,"sources":["App.js","index.js"],"names":["App","_useState","useState","_useState2","_slicedToArray","apiData","setApiData","_useState3","_useState4","location","setLocation","_useState5","React","createElement","className","id","_useState6","advice","setAdvice","_useState7","_useState8","hiddenHeader","setHeadertoHiddenClass","_useState9","_useState10","hiddenField","setHiddenBottomDetailsClass","_useState11","_useState12","hiddenSlider","setSliderToHiddenClass","_useState13","_useState14","hiddenWeather","setWeatherDetailsToHiddenClass","_useState15","_useState16","hiddenNext","setNextButtonToHiddenClass","_useState17","_useState18","emotion","setSliderValue","url","concat","location_input","value","onChange","event","target","placeholder","type","save_api_data_button","Button","onClick","handleSaveApiData","give_advice_button","handleMakeDecision","emotion_range_slider","classname","RangeSlider","min","max","variant","changeEvent","axios","get","then","response","data","weather_data","weather","main","great_weather","alright_weather","includes","name","temp","toFixed","description","toUpperCase","feels_like","humidity","wind","speed","window","reload","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.faf00fae.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { Button } from \"react-bootstrap\";\nimport RangeSlider from \"react-bootstrap-range-slider\";\n\nfunction App() {\n  const [apiData, setApiData] = useState({});\n  const [location, setLocation] = useState(\"\");\n  const [advice, setAdvice] = useState(\n    <div className=\"loading-container\">\n      <div className=\"loading\"></div>\n      <div id=\"loading-text\">Waiting...</div>\n    </div>\n  );\n  const [hiddenHeader, setHeadertoHiddenClass] = useState(\"block\");\n  const [hiddenField, setHiddenBottomDetailsClass] = useState(\"hidden\");\n  const [hiddenSlider, setSliderToHiddenClass] = useState(\"hidden\");\n  const [hiddenWeather, setWeatherDetailsToHiddenClass] = useState(\"hidden\");\n  const [hiddenNext, setNextButtonToHiddenClass] = useState(\"block\");\n  const [emotion, setSliderValue] = useState(0);\n\n  const url = `https://api.openweathermap.org/data/2.5/weather?zip=${location},us&units=imperial&appid=60e9ee923c45e087f45389019a259b46`;\n  const location_input = (\n    <input\n      value={location}\n      onChange={(event) => setLocation(event.target.value)}\n      placeholder=\"Type Zip Code\"\n      type=\"text\"\n    />\n  );\n  const save_api_data_button = (\n    <Button\n      className=\"button-effects search-button\"\n      onClick={() => handleSaveApiData()}\n    >\n      Next\n    </Button>\n  );\n  const give_advice_button = (\n    <Button\n      className=\"button-effects search-button advice\"\n      onClick={() => handleMakeDecision()}\n    >\n      Give Me Advice\n    </Button>\n  );\n  const emotion_range_slider = (\n    <div classname=\"emotionSlider\">\n      <p>Choose How you Feel</p>\n      <p className=\"emotionRange\">( 1-Terrible | 3-Neutral | 5-Fantastic )</p>\n      <RangeSlider\n        className=\"slider\"\n        value={emotion}\n        min={1}\n        max={5}\n        variant=\"light\"\n        onChange={(changeEvent) => setSliderValue(changeEvent.target.value)}\n      />\n    </div>\n  );\n\n  // saves Api Data and sets the state of the data\n  const handleSaveApiData = () => {\n    axios.get(url).then((response) => {\n      // saves the api call data in state\n      setApiData(response.data);\n      setNextButtonToHiddenClass(\"hidden\");\n      setSliderToHiddenClass(\"block\");\n      setWeatherDetailsToHiddenClass(\"hidden\");\n    });\n  };\n\n  // takes api data and emotion data and makes decision\n  const handleMakeDecision = () => {\n    var weather_data = apiData.weather[0].main;\n    setHeadertoHiddenClass(\"hidden\");\n    setSliderToHiddenClass(\"hidden\");\n    setWeatherDetailsToHiddenClass(\"block\");\n    setHiddenBottomDetailsClass(\"block\");\n    // weather condition constants\n    const bad_weather = [\n      \"Rain\",\n      \"Snow\",\n      \"Mist\",\n      \"Smoke\",\n      \"Dust\",\n      \"Sand\",\n      \"Ash\",\n      \"Squall\",\n      \"Tornado\",\n      \"Drizzle\",\n      \"Thunderstorm\",\n    ];\n    const great_weather = [\"Clear\"];\n    const alright_weather = [\"Fog\", \"Clouds\"];\n    const questionable_weather = [\"Haze\"];\n    // controls verbiage based on weather type and emotions\n    if (bad_weather.includes(weather_data)) {\n      setAdvice(<p>Weather looks bad. You should stay inside and rest!</p>);\n    } else if (questionable_weather.includes(weather_data)) {\n      setAdvice(<p>Weather is questionable. Use your best judgement here!</p>);\n    } else if (great_weather.includes(weather_data) && emotion == 5) {\n      setAdvice(<p>It was mean to be! Bring yo water!</p>);\n    } else if (great_weather.includes(weather_data) && emotion == 4) {\n      setAdvice(<p>Weather looks great! You should be outside skating!</p>);\n    } else if (great_weather.includes(weather_data) && emotion == 3) {\n      setAdvice(<p>Weather looks great! When in doubt, go skate!</p>);\n    } else if (great_weather.includes(weather_data) && emotion == 2) {\n      setAdvice(<p>Weather looks great! You will feel better if you skate!</p>);\n    } else if (great_weather.includes(weather_data) && emotion == 1) {\n      setAdvice(<p>Weather looks good, but maybe get some rest today.</p>);\n    } else if (alright_weather.includes(weather_data) && emotion == 5) {\n      setAdvice(<p>It was meant to be! Bring yo water!</p>);\n    } else if (alright_weather.includes(weather_data) && emotion == 4) {\n      setAdvice(<p>Weather looks alright. You should be outside skating!</p>);\n    } else if (alright_weather.includes(weather_data) && emotion == 3) {\n      setAdvice(<p>When in doubt, go skate!</p>);\n    } else if (alright_weather.includes(weather_data) && emotion == 2) {\n      setAdvice(<p>Weather looks alright, but take it easy out there!</p>);\n    } else if (alright_weather.includes(weather_data) && emotion == 1) {\n      setAdvice(\n        <p>Weather looks alright, but you should get some rest today!</p>\n      );\n    }\n  };\n\n  const handleStartOver = () => {\n    window.location.reload();\n  };\n\n  return (\n    <div className=\"app\">\n      {/* header */}\n      <div className={hiddenHeader}>\n        <div className=\"header\">\n          <p className=\"header-text\">Should I Skate Today?</p>\n        </div>\n      </div>\n      {/* form */}\n      <div className={hiddenNext}>\n        <div className=\"location_input\">\n          {location_input}\n          {save_api_data_button}\n        </div>\n      </div>\n      <div className={hiddenSlider}>\n        <div className=\"emotion\">{emotion_range_slider}</div>\n        <div classname=\"advice\">{give_advice_button}</div>\n      </div>\n      {/* middle section */}\n      <div className=\"container\">\n        <div className={hiddenWeather}>\n            <div className=\"top\">\n              <div className=\"advice\">{advice}</div>\n              <div className=\"location\">\n                <h2>{apiData.name}</h2>\n              </div>\n              <div className=\"temp\">\n                {apiData.main ? <h1>{apiData.main.temp.toFixed()}°F</h1> : null}\n              </div>\n              <div className=\"description\">\n                {apiData.weather ? (\n                  <p className=\"bold\">{(apiData.weather[0].description).toUpperCase()}</p>\n                ) : null}\n            </div>\n          </div>\n        </div>\n        {/* bottom details */}\n        <div className={hiddenField}>\n          <div className=\"bottom\">\n            <div className=\"feels\">\n              <p className=\"bold\"></p>\n              {apiData.main ? (\n                <p className=\"bold\">{apiData.main.feels_like.toFixed()}°F</p>\n              ) : null}\n              <p>Feels Like</p>\n            </div>\n            <div className=\"humidity\">\n              {apiData.main ? (\n                <p className=\"bold\">{apiData.main.humidity}%</p>\n              ) : null}\n              <p>Humidity</p>\n            </div>\n            <div className=\"wind\">\n              {apiData.main ? (\n                <p className=\"bold\">{apiData.wind.speed.toFixed()}MPH</p>\n              ) : null}\n              <p>Wind Speed</p>\n            </div>\n          </div>\n          {/* start over/refresh button */}\n          <Button\n            className=\"button-effects refresh-button\"\n            onClick={() => handleStartOver()}\n          >\n            Start Over\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n\n// const photo = {\n\n// }\n\n// const rainyPhoto = {\n//   \"--background-photo\": '/assets/rainy.png'\n// }\n\n// const snowyPhoto = {\n//   \"--background-photo\": '/assets/snow.png'\n// }\n\n// const sunnyPhoto = {\n//   \"--background-photo\": '/assets/sunny.png'\n// }\n\n// const overcastPhoto = {\n//   \"--background-photo\": '/assets/overcast.png'\n// }\n\n// const setBackgroundPicture = () => {\n//   if ((data.weather[0].description).contains('rain')) {\n//   // set background photo to rainy one\n//   \"--background-photo\": '/assets/rainy.png'\n//   } else if ((data.weather[0].description).contains('snow')) {\n//   // set background photo to snowy one\n\n//   } else if ((data.weather[0].description).contains('sun')) {\n//   // set background photo to sunny one\n\n//   } else if ((data.weather[0].description).contains('overcast')) {\n//   // set background photo to overcast one\n//   }\n// };\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport 'react-bootstrap-range-slider/dist/react-bootstrap-range-slider.css';\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}